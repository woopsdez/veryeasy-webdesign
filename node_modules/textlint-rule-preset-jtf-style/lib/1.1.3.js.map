{"version":3,"sources":["../src/1.1.3.js"],"names":["module","exports","context","Syntax","RuleError","report","getSource","desumasuList","dearuList","withPointList","withoutPointList","resetList","reportPointResult","nodeList","shouldUsePoint","forEach","message","node","reportDesumaruDearuResult","list","desumasu","dearu","matches","match","value","line","lineNumber","column","columnIndex","countingPoint","length","countingDesumasuDearu","desumasuCount","reduce","count","dearuCount","List","ListItem","text","matchPointReg","test","push","retDesumasu","retDearu"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;AASA;;;;AACAA,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAAA;;AAAA,QACzBC,MADyB,GACgBD,OADhB,CACzBC,MADyB;AAAA,QACjBC,SADiB,GACgBF,OADhB,CACjBE,SADiB;AAAA,QACNC,MADM,GACgBH,OADhB,CACNG,MADM;AAAA,QACEC,SADF,GACgBJ,OADhB,CACEI,SADF;;AAE/B,QAAIC,eAAe,EAAnB;AACA,QAAIC,YAAY,EAAhB;AACA;AACA,QAAIC,gBAAgB,EAApB;AACA;AACA,QAAIC,mBAAmB,EAAvB;;AAEA,aAASC,SAAT,GAAqB;AACjBH,oBAAY,EAAZ;AACAD,uBAAe,EAAf;AACAE,wBAAgB,EAAhB;AACAC,2BAAmB,EAAnB;AACH;;AAED,aAASE,iBAAT,CAA2BC,QAA3B,QAAyD;AAAA,YAAlBC,cAAkB,QAAlBA,cAAkB;;AACrDD,iBAASE,OAAT,CAAiB,gBAAQ;AACrB,gBAAIC,gBAAJ;AACA,gBAAIF,cAAJ,EAAoB;AAChBE;AACH,aAFD,MAEO;AACHA;AACH;AACDX,mBAAOY,IAAP,EAAa,IAAIb,SAAJ,CAAcY,OAAd,CAAb;AACH,SARD;AASH;;AAED,aAASE,yBAAT,CAAmCC,IAAnC,SAA8D;AAAA,YAAnBC,QAAmB,SAAnBA,QAAmB;AAAA,YAATC,KAAS,SAATA,KAAS;;AAC1DF,aAAKJ,OAAL,CAAa,iBAAuB;AAAA,gBAApBE,IAAoB,SAApBA,IAAoB;AAAA,gBAAdK,OAAc,SAAdA,OAAc;;AAChCA,oBAAQP,OAAR,CAAgB,iBAAS;AACrB,oBAAIC,gBAAJ;AACA,oBAAII,QAAJ,EAAc;AACVJ,iVAAqEO,MAAMC,KAA3E;AACH,iBAFD,MAEO,IAAIH,KAAJ,EAAW;AACdL,2UAAoEO,MAAMC,KAA1E;AACH;AACDnB,uBACIY,IADJ,EAEI,IAAIb,SAAJ,CAAcY,OAAd,EAAuB;AACnBS,0BAAMF,MAAMG,UAAN,GAAmB,CADN;AAEnBC,4BAAQJ,MAAMK;AAFK,iBAAvB,CAFJ;AAOH,aAdD;AAeH,SAhBD;AAiBH;;AAED;AACA,aAASC,aAAT,CAAuBpB,aAAvB,EAAsCC,gBAAtC,EAAwD;AACpD,YAAID,cAAcqB,MAAd,KAAyB,CAAzB,IAA8BpB,iBAAiBoB,MAAjB,KAA4B,CAA9D,EAAiE;AAC7D;AACH;AACD,YAAIrB,cAAcqB,MAAd,GAAuBpB,iBAAiBoB,MAA5C,EAAoD;AAChD;AACAlB,8BAAkBF,gBAAlB,EAAoC;AAChCI,gCAAgB;AADgB,aAApC;AAGH,SALD,MAKO,IAAIL,cAAcqB,MAAd,GAAuBpB,iBAAiBoB,MAA5C,EAAoD;AACvD;AACAlB,8BAAkBH,aAAlB,EAAiC;AAC7BK,gCAAgB;AADa,aAAjC;AAGH,SALM,MAKA;AACH;AACAF,8BAAkBF,gBAAlB,EAAoC;AAChCI,gCAAgB;AADgB,aAApC;AAGH;AACJ;;AAED;AACA,aAASiB,qBAAT,CAA+BxB,YAA/B,EAA6CC,SAA7C,EAAwD;AACpD,YAAIwB,gBAAgBzB,aAAa0B,MAAb,CAAoB,UAACC,KAAD;AAAA,gBAAUZ,OAAV,SAAUA,OAAV;AAAA,mBAAwBY,QAAQZ,QAAQQ,MAAxC;AAAA,SAApB,EAAoE,CAApE,CAApB;AACA,YAAIK,aAAa3B,UAAUyB,MAAV,CAAiB,UAACC,KAAD;AAAA,gBAAUZ,OAAV,SAAUA,OAAV;AAAA,mBAAwBY,QAAQZ,QAAQQ,MAAxC;AAAA,SAAjB,EAAiE,CAAjE,CAAjB;AACA,YAAIE,kBAAkB,CAAlB,IAAuBG,eAAe,CAA1C,EAA6C;AACzC;AACH;AACD;AACA,YAAIH,gBAAgBG,UAApB,EAAgC;AAC5BjB,sCAA0BV,SAA1B,EAAqC;AACjCY,0BAAU;AADuB,aAArC;AAGH,SAJD,MAIO,IAAIY,gBAAgBG,UAApB,EAAgC;AACnC;AACAjB,sCAA0BX,YAA1B,EAAwC;AACpCc,uBAAO;AAD6B,aAAxC;AAGH,SALM,MAKA;AACH;AACAH,sCAA0BV,SAA1B,EAAqC;AACjCY,0BAAU;AADuB,aAArC;AAGH;AACJ;;AAED,8CACKjB,OAAOiC,IADZ,YACkBnB,IADlB,EACwB;AAChBN;AACH,KAHL,0BAIKR,OAAOkC,QAJZ,YAIsBpB,IAJtB,EAI4B;AACpB,YAAIqB,OAAOhC,UAAUW,IAAV,CAAX;AACA;AACA,YAAIsB,gBAAgB,UAApB;AACA,YAAIA,cAAcC,IAAd,CAAmBF,IAAnB,CAAJ,EAA8B;AAC1B;AACA7B,0BAAcgC,IAAd,CAAmBxB,IAAnB;AACH,SAHD,MAGO;AACH;AACAP,6BAAiB+B,IAAjB,CAAsBxB,IAAtB;AACH;AACD;AACA,YAAIyB,cAAc,2CAAgBJ,IAAhB,CAAlB;AACA,YAAII,YAAYZ,MAAZ,GAAqB,CAAzB,EAA4B;AACxBvB,yBAAakC,IAAb,CAAkB;AACdxB,sBAAMA,IADQ;AAEdK,yBAASoB;AAFK,aAAlB;AAIH;AACD,YAAIC,WAAW,wCAAaL,IAAb,CAAf;AACA,YAAIK,SAASb,MAAT,GAAkB,CAAtB,EAAyB;AACrBtB,sBAAUiC,IAAV,CAAe;AACXxB,sBAAMA,IADK;AAEXK,yBAASqB;AAFE,aAAf;AAIH;AACJ,KA9BL,0BA+BQxC,OAAOiC,IA/Bf,+BA+B4BnB,IA/B5B,EA+BkC;AAC1BY,sBAAcpB,aAAd,EAA6BC,gBAA7B;;AAEAqB,8BAAsBxB,YAAtB,EAAoCC,SAApC;AACH,KAnCL;AAqCH,CArID","file":"1.1.3.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n1.1.3.箇条書き\n\n基本的に本文の文体に合わせます。\nただし、本文が「敬体」である場合、箇条書きに「常体」または「体言止め」も使う場合があります。\n一般読者向け の文書で、本文が敬体である場合、多くの場合、箇条書きでも敬体を使います。\n本文が「常体」である場合、箇条書きには「常体」または「体言止め」を使います。「敬体」は使いません。\nいずれの場合も、ひとまとまりの箇条書きでは、敬体と常体を混在させません。文末に句点(。)を付けるかどうかも統一します。\n */\nimport { analyzeDesumasu, analyzeDearu } from \"analyze-desumasu-dearu\";\nmodule.exports = function(context) {\n    let { Syntax, RuleError, report, getSource } = context;\n    let desumasuList = [];\n    let dearuList = [];\n    // 。付きのListItem\n    let withPointList = [];\n    // 。なしのListItem\n    let withoutPointList = [];\n\n    function resetList() {\n        dearuList = [];\n        desumasuList = [];\n        withPointList = [];\n        withoutPointList = [];\n    }\n\n    function reportPointResult(nodeList, { shouldUsePoint }) {\n        nodeList.forEach(node => {\n            let message;\n            if (shouldUsePoint) {\n                message = `箇条書きの文末に句点(。)を付けて下さい。\\n箇条書きの文末に句点(。)を付けるかを統一します。`;\n            } else {\n                message = `箇条書きの文末から句点(。)を外して下さい。\\n箇条書きの文末に句点(。)を付けるかを統一します。`;\n            }\n            report(node, new RuleError(message));\n        });\n    }\n\n    function reportDesumaruDearuResult(list, { desumasu, dearu }) {\n        list.forEach(({ node, matches }) => {\n            matches.forEach(match => {\n                let message;\n                if (desumasu) {\n                    message = `箇条書きを敬体(ですます調)に統一して下さい。\\nひとまとまりの箇条書きでは、敬体と常体を混在させません。\\n\"${match.value}\"が常体(である調)です。`;\n                } else if (dearu) {\n                    message = `箇条書きを常体(である調)に統一して下さい。\\nひとまとまりの箇条書きでは、敬体と常体を混在させません。\\n\"${match.value}\"が敬体(ですます調)です。`;\n                }\n                report(\n                    node,\n                    new RuleError(message, {\n                        line: match.lineNumber - 1,\n                        column: match.columnIndex\n                    })\n                );\n            });\n        });\n    }\n\n    // 末尾に。があるかが統一されているのチェック\n    function countingPoint(withPointList, withoutPointList) {\n        if (withPointList.length === 0 || withoutPointList.length === 0) {\n            return;\n        }\n        if (withPointList.length > withoutPointList.length) {\n            // 。ありに統一\n            reportPointResult(withoutPointList, {\n                shouldUsePoint: true\n            });\n        } else if (withPointList.length < withoutPointList.length) {\n            // 。なしに統一\n            reportPointResult(withPointList, {\n                shouldUsePoint: false\n            });\n        } else {\n            // 。ありに統一\n            reportPointResult(withoutPointList, {\n                shouldUsePoint: true\n            });\n        }\n    }\n\n    // 敬体(ですます調)あるいは常体(である調)なのかのチェック\n    function countingDesumasuDearu(desumasuList, dearuList) {\n        let desumasuCount = desumasuList.reduce((count, { matches }) => count + matches.length, 0);\n        let dearuCount = dearuList.reduce((count, { matches }) => count + matches.length, 0);\n        if (desumasuCount === 0 || dearuCount === 0) {\n            return;\n        }\n        // ですます優先\n        if (desumasuCount > dearuCount) {\n            reportDesumaruDearuResult(dearuList, {\n                desumasu: true\n            });\n        } else if (desumasuCount < dearuCount) {\n            // である優先\n            reportDesumaruDearuResult(desumasuList, {\n                dearu: true\n            });\n        } else {\n            // 同等の場合はですます優先\n            reportDesumaruDearuResult(dearuList, {\n                desumasu: true\n            });\n        }\n    }\n\n    return {\n        [Syntax.List](node) {\n            resetList();\n        },\n        [Syntax.ListItem](node) {\n            let text = getSource(node);\n            // 末尾に。があるかが統一されているのチェック\n            let matchPointReg = /。(\\s*?)$/;\n            if (matchPointReg.test(text)) {\n                // 。あり\n                withPointList.push(node);\n            } else {\n                // 。なし\n                withoutPointList.push(node);\n            }\n            // 敬体(ですます調)あるいは常体(である調)なのかのチェック\n            let retDesumasu = analyzeDesumasu(text);\n            if (retDesumasu.length > 0) {\n                desumasuList.push({\n                    node: node,\n                    matches: retDesumasu\n                });\n            }\n            let retDearu = analyzeDearu(text);\n            if (retDearu.length > 0) {\n                dearuList.push({\n                    node: node,\n                    matches: retDearu\n                });\n            }\n        },\n        [`${Syntax.List}:exit`](node) {\n            countingPoint(withPointList, withoutPointList);\n\n            countingDesumasuDearu(desumasuList, dearuList);\n        }\n    };\n};\n"]}