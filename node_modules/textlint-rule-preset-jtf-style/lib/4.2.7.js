// LICENSE : MIT
"use strict";
/*
4.2.7.コロン(：)
原則として和文ではコロン(:)を使用しません。
原文でコロンが使われている場合も、和文では使用しません。
ただし和文でも、見出し語とその説明の間にコロンを使う場合があります。使用する場合は全角で表記します。
 */

var _templateObject = _taggedTemplateLiteral(["(?:", ")(:)"], ["(?:", ")(:)"]);

var _nodeUtil = require("./util/node-util");

var _matchIndex = require("match-index");

var _regx = require("regx");

var _regx2 = _interopRequireDefault(_regx);

var _regexp = require("./util/regexp");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

var rx = (0, _regx2.default)("g");
function reporter(context) {
    var Syntax = context.Syntax,
        RuleError = context.RuleError,
        report = context.report,
        fixer = context.fixer,
        getSource = context.getSource;

    return _defineProperty({}, Syntax.Str, function (node) {
        if (!(0, _nodeUtil.isUserWrittenNode)(node, context)) {
            return;
        }
        var text = getSource(node);
        // "和文:" というような半角:は使用しない

        var matchHanQuestion = rx(_templateObject, _regexp.japaneseRegExp);
        (0, _matchIndex.matchCaptureGroupAll)(text, matchHanQuestion).forEach(function (match) {
            var index = match.index;

            report(node, new RuleError("コロン(：)を使用する場合は「全角」で表記します。", {
                index: index,
                fix: fixer.replaceTextRange([index, index + 1], "：")
            }));
        });
    });
}
module.exports = {
    linter: reporter,
    fixer: reporter
};
//# sourceMappingURL=4.2.7.js.map