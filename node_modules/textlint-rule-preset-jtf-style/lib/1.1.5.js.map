{"version":3,"sources":["../src/1.1.5.js"],"names":["module","exports","context","Syntax","RuleError","report","getSource","desumasuList","dearuList","resetState","imagePaddingLet","reportResult","list","desumasu","dearu","forEach","node","matches","message","match","value","line","lineNumber","column","columnIndex","Document","Image","text","alt","undefined","retDesumasu","length","push","retDearu","desumasuCount","reduce","count","dearuCount"],"mappings":"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","file":"1.1.5.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n1.1.5.図表のキャプション\n文章の内容に応じて、敬体、常体、体言止めを使います。\nいずれの場合も、複数の文体をできるだけ混在させないことが重要です。\n通常、文末に句点(。)を付けませんが、複数の文章になる場合は句点を使用します。\n\nキャプション間で文体が混ざっていないことを確認する。\n */\nimport { analyzeDesumasu, analyzeDearu } from \"analyze-desumasu-dearu\";\nmodule.exports = function(context) {\n    let { Syntax, RuleError, report, getSource } = context;\n    let desumasuList = [];\n    let dearuList = [];\n\n    function resetState() {\n        desumasuList = [];\n        dearuList = [];\n    }\n\n    const imagePaddingLet = 2; // ![ の分paddingを付ける\n    function reportResult(list, { desumasu, dearu }) {\n        list.forEach(({ node, matches }) => {\n            matches.forEach(match => {\n                let message;\n                if (desumasu) {\n                    message = `図表のキャプションを敬体(ですます調)に統一して下さい。\\n図表のキャプション内で敬体、常体を混在させないことが重要です。\\n\"${match.value}\"が常体(である調)です。`;\n                } else if (dearu) {\n                    message = `図表のキャプションを常体(である調)に統一して下さい。\\n図表のキャプション内で敬体、常体を混在させないことが重要です。\\n\"${match.value}\"が敬体(ですます調)です。`;\n                }\n                report(\n                    node,\n                    new RuleError(message, {\n                        line: match.lineNumber - 1,\n                        column: match.columnIndex + imagePaddingLet\n                    })\n                );\n            });\n        });\n    }\n\n    return {\n        [Syntax.Document]: resetState,\n        [Syntax.Image](node) {\n            let text = node.alt;\n            // alt がない場合は無視する\n            if (text === undefined || text === null) {\n                return;\n            }\n            let retDesumasu = analyzeDesumasu(text);\n            if (retDesumasu.length > 0) {\n                desumasuList.push({\n                    node: node,\n                    matches: retDesumasu\n                });\n            }\n            let retDearu = analyzeDearu(text);\n            if (retDearu.length > 0) {\n                dearuList.push({\n                    node: node,\n                    matches: retDearu\n                });\n            }\n        },\n        [`${Syntax.Document}:exit`]() {\n            let desumasuCount = desumasuList.reduce((count, { matches }) => count + matches.length, 0);\n            let dearuCount = dearuList.reduce((count, { matches }) => count + matches.length, 0);\n            if (desumasuCount === 0 || dearuCount === 0) {\n                return;\n            }\n            if (desumasuCount > dearuCount) {\n                reportResult(dearuList, {\n                    desumasu: true\n                });\n            } else if (desumasuCount < dearuCount) {\n                reportResult(desumasuList, {\n                    dearu: true\n                });\n            } else {\n                reportResult(dearuList, {\n                    desumasu: true\n                });\n            }\n        }\n    };\n};\n"]}