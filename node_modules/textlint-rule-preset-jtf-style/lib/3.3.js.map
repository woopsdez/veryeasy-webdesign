{"version":3,"sources":["../src/3.3.js"],"names":["brackets","leftBrackets","map","RegExp","bracket","rightBrackets","reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","forEach","pattern","index","match","fix","replaceTextRange","module","exports","linter"],"mappings":"AAAA;AACA;AACA;;;;;AAIA;;AACA;;;;AAEA,IAAMA,WAAW,CAAC,KAAD,EAAQ,KAAR,EAAe,GAAf,EAAoB,GAApB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,GAAnC,EAAwC,GAAxC,EAA6C,GAA7C,EAAkD,GAAlD,CAAjB;;AAEA,IAAMC,eAAeD,SAASE,GAAT,CAAa,mBAAW;AACzC,WAAO,IAAIC,MAAJ,CAAW,WAAWC,OAAtB,EAA+B,GAA/B,CAAP;AACH,CAFoB,CAArB;AAGA,IAAMC,gBAAgBL,SAASE,GAAT,CAAa,mBAAW;AAC1C,WAAO,IAAIC,MAAJ,CAAWC,UAAU,QAArB,EAA+B,GAA/B,CAAP;AACH,CAFqB,CAAtB;AAGA,SAASE,QAAT,CAAkBC,OAAlB,EAA2B;AAAA,QACjBC,MADiB,GAC+BD,OAD/B,CACjBC,MADiB;AAAA,QACTC,SADS,GAC+BF,OAD/B,CACTE,SADS;AAAA,QACEC,MADF,GAC+BH,OAD/B,CACEG,MADF;AAAA,QACUC,KADV,GAC+BJ,OAD/B,CACUI,KADV;AAAA,QACiBC,SADjB,GAC+BL,OAD/B,CACiBK,SADjB;;AAEvB,+BACKJ,OAAOK,GADZ,YACiBC,IADjB,EACuB;AACf,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAMQ,OAAOH,UAAUE,IAAV,CAAb;AACA;AACAb,qBAAae,OAAb,CAAqB,mBAAW;AAC5B,kDAAqBD,IAArB,EAA2BE,OAA3B,EAAoCD,OAApC,CAA4C,iBAAS;AAAA,oBACzCE,KADyC,GAC/BC,KAD+B,CACzCD,KADyC;;AAEjDR,uBACII,IADJ,EAEI,IAAIL,SAAJ,CAAc,yBAAd,EAAyC;AACrCS,2BAAOA,KAD8B;AAErCE,yBAAKT,MAAMU,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,EAA3C;AAFgC,iBAAzC,CAFJ;AAOH,aATD;AAUH,SAXD;AAYA;AACAb,sBAAcW,OAAd,CAAsB,mBAAW;AAC7B,kDAAqBD,IAArB,EAA2BE,OAA3B,EAAoCD,OAApC,CAA4C,iBAAS;AAAA,oBACzCE,KADyC,GACzBC,KADyB,CACzCD,KADyC;AAAA,oBAClCH,IADkC,GACzBI,KADyB,CAClCJ,IADkC;;AAEjDL,uBACII,IADJ,EAEI,IAAIL,SAAJ,CAAc,yBAAd,EAAyC;AACrCS,2BAAOA,KAD8B;AAErCE,yBAAKT,MAAMU,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,EAA3C;AAFgC,iBAAzC,CAFJ;AAOH,aATD;AAUH,SAXD;AAYH,KAhCL;AAkCH;AACDI,OAAOC,OAAP,GAAiB;AACbC,YAAQlB,QADK;AAEbK,WAAOL;AAFM,CAAjB","file":"3.3.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n3.3. かっこ類と隣接する文字の間のスペースの有無\nかっこの外側、内側ともにスペースを入れません。\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchCaptureGroupAll } from \"match-index\";\n\nconst brackets = [\"\\\\[\", \"\\\\]\", \"（\", \"）\", \"［\", \"］\", \"「\", \"」\", \"『\", \"』\"];\n\nconst leftBrackets = brackets.map(bracket => {\n    return new RegExp(\"([ 　])\" + bracket, \"g\");\n});\nconst rightBrackets = brackets.map(bracket => {\n    return new RegExp(bracket + \"([ 　])\", \"g\");\n});\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            const text = getSource(node);\n            // 左にスペース\n            leftBrackets.forEach(pattern => {\n                matchCaptureGroupAll(text, pattern).forEach(match => {\n                    const { index } = match;\n                    report(\n                        node,\n                        new RuleError(\"かっこの外側、内側ともにスペースを入れません。\", {\n                            index: index,\n                            fix: fixer.replaceTextRange([index, index + 1], \"\")\n                        })\n                    );\n                });\n            });\n            // 右にスペース\n            rightBrackets.forEach(pattern => {\n                matchCaptureGroupAll(text, pattern).forEach(match => {\n                    const { index, text } = match;\n                    report(\n                        node,\n                        new RuleError(\"かっこの外側、内側ともにスペースを入れません。\", {\n                            index: index,\n                            fix: fixer.replaceTextRange([index, index + 1], \"\")\n                        })\n                    );\n                });\n            });\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"]}