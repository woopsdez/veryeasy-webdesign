{"version":3,"sources":["../src/3.1.1.js"],"names":["reporter","context","Syntax","RuleError","report","fixer","getSource","Str","node","text","betweenHanAndZen","betweenZenAndHan","reportMatch","index","match","fix","replaceTextRange","forEach","module","exports","linter"],"mappings":"AAAA;AACA;AACA;;;;;;;AAMA;;AACA;;;;AACA,SAASA,QAAT,CAAkBC,OAAlB,EAA2B;AAAA,QACjBC,MADiB,GAC+BD,OAD/B,CACjBC,MADiB;AAAA,QACTC,SADS,GAC+BF,OAD/B,CACTE,SADS;AAAA,QACEC,MADF,GAC+BH,OAD/B,CACEG,MADF;AAAA,QACUC,KADV,GAC+BJ,OAD/B,CACUI,KADV;AAAA,QACiBC,SADjB,GAC+BL,OAD/B,CACiBK,SADjB;;AAEvB,+BACKJ,OAAOK,GADZ,YACiBC,IADjB,EACuB;AACf,YAAI,CAAC,iCAAkBA,IAAlB,EAAwBP,OAAxB,CAAL,EAAuC;AACnC;AACH;AACD,YAAIQ,OAAOH,UAAUE,IAAV,CAAX;AACA;AACA,YAAIE,mBAAmB,sCACnBD,IADmB,EAEnB,qGAFmB,CAAvB;AAIA,YAAIE,mBAAmB,sCACnBF,IADmB,EAEnB,qGAFmB,CAAvB;AAIA,YAAMG,cAAc,SAAdA,WAAc,QAAS;AAAA,gBACjBC,KADiB,GACPC,KADO,CACjBD,KADiB;;AAEzBT,mBACII,IADJ,EAEI,IAAIL,SAAJ,CAAc,+BAAd,EAA+C;AAC3CU,uBAAOC,MAAMD,KAD8B;AAE3CE,qBAAKV,MAAMW,gBAAN,CAAuB,CAACH,KAAD,EAAQA,QAAQ,CAAhB,CAAvB,EAA2C,EAA3C;AAFsC,aAA/C,CAFJ;AAOH,SATD;AAUAH,yBAAiBO,OAAjB,CAAyBL,WAAzB;AACAD,yBAAiBM,OAAjB,CAAyBL,WAAzB;AACH,KA3BL;AA6BH;AACDM,OAAOC,OAAP,GAAiB;AACbC,YAAQpB,QADK;AAEbK,WAAOL;AAFM,CAAjB","file":"3.1.1.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n3.1.1. 全角文字と半角文字の間\n原則として、全角文字と半角文字の間にスペースを入れません。\n\n。ただしカタカナ複合語の場合を除きます。「2.1.7 カタカナ複合語」を参照してください。\n */\nimport { isUserWrittenNode } from \"./util/node-util\";\nimport { matchCaptureGroupAll } from \"match-index\";\nfunction reporter(context) {\n    let { Syntax, RuleError, report, fixer, getSource } = context;\n    return {\n        [Syntax.Str](node) {\n            if (!isUserWrittenNode(node, context)) {\n                return;\n            }\n            let text = getSource(node);\n            // アルファベットと全角の間は半角スペースではない\n            let betweenHanAndZen = matchCaptureGroupAll(\n                text,\n                /[A-Za-z0-9]( )(?:[\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF]|[ぁ-んァ-ヶ])/\n            );\n            let betweenZenAndHan = matchCaptureGroupAll(\n                text,\n                /(?:[\\u3400-\\u4DBF\\u4E00-\\u9FFF\\uF900-\\uFAFF]|[\\uD840-\\uD87F][\\uDC00-\\uDFFF]|[ぁ-んァ-ヶ])( )[A-Za-z0-9]/\n            );\n            const reportMatch = match => {\n                const { index } = match;\n                report(\n                    node,\n                    new RuleError(\"原則として、全角文字と半角文字の間にスペースを入れません。\", {\n                        index: match.index,\n                        fix: fixer.replaceTextRange([index, index + 1], \"\")\n                    })\n                );\n            };\n            betweenHanAndZen.forEach(reportMatch);\n            betweenZenAndHan.forEach(reportMatch);\n        }\n    };\n}\nmodule.exports = {\n    linter: reporter,\n    fixer: reporter\n};\n"]}