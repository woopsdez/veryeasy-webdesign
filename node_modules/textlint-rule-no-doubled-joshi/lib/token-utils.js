// LICENSE : MIT
"use strict";
// 助詞どうか

Object.defineProperty(exports, "__esModule", {
    value: true
});
var is助詞Token = exports.is助詞Token = function is助詞Token(token) {
    // 結合しているtokenは助詞助詞のようになってるため先頭一致で見る
    return token && /^助詞/.test(token.pos);
};

var is読点Token = exports.is読点Token = function is読点Token(token) {
    return token.surface_form === "、" && token.pos === "名詞";
};
/**
 * aTokenの_extraKeyに結合したkeyを追加する
 * @param {Object} aToken
 * @param {Object} bToken
 * @returns {Object}
 */
var concatToken = function concatToken(aToken, bToken) {
    aToken.surface_form += bToken.surface_form;
    aToken.pos += bToken.pos;
    aToken.pos_detail_1 += bToken.surface_form;
    return aToken;
};
/**
 * 助詞+助詞 というように連続しているtokenを結合し直したtokenの配列を返す
 * @param {Array} tokens
 * @returns {Array}
 */
var concatJoishiTokens = exports.concatJoishiTokens = function concatJoishiTokens(tokens) {
    var newTokens = [];
    tokens.forEach(function (token) {
        var prevToken = newTokens[newTokens.length - 1];
        if (is助詞Token(token) && is助詞Token(prevToken)) {
            newTokens[newTokens.length - 1] = concatToken(prevToken, token);
        } else {
            newTokens.push(token);
        }
    });
    return newTokens;
};
// 助詞tokenから品詞細分類1までを元にしたkeyを作る
// http://www.unixuser.org/~euske/doc/postag/index.html#chasen
// http://chasen.naist.jp/snapshot/ipadic/ipadic/doc/ipadic-ja.pdf
var createKeyFromKey = exports.createKeyFromKey = function createKeyFromKey(token) {
    // e.g.) "は:助詞.係助詞"
    return token.surface_form + ":" + token.pos + "." + token.pos_detail_1;
};
// keyからsurfaceを取り出す
var restoreToSurfaceFromKey = exports.restoreToSurfaceFromKey = function restoreToSurfaceFromKey(key) {
    return key.split(":")[0];
};
//# sourceMappingURL=token-utils.js.map