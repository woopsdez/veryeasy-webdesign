{"version":3,"sources":["../src/no-dropping-the-ra.js"],"names":["isTargetVerb","token","pos","pos_detail_1","conjugated_type","conjugated_form","isRaWord","basic_form","isKoreru","module","exports","context","helper","Syntax","report","getSource","RuleError","Str","node","isChildNode","Link","Image","BlockQuote","Emphasis","text","then","tokens","forEach","index","word_position","length","reduce","prev","current"],"mappings":"AAAA;AACA;;AACA;;AACA;;;;;;;;AAEA,SAASA,YAAT,CAAsBC,KAAtB,EAA6B;AACzB,WAAOA,MAAMC,GAAN,IAAa,IAAb,IACHD,MAAME,YAAN,IAAsB,IADnB,IAEHF,MAAMG,eAAN,IAAyB,IAFtB,IAGHH,MAAMI,eAAN,IAAyB,KAH7B;AAIH;;AAED,SAASC,QAAT,CAAkBL,KAAlB,EAAyB;AACrB,WAAOA,MAAMC,GAAN,IAAa,IAAb,IACHD,MAAME,YAAN,IAAsB,IADnB,IAEHF,MAAMM,UAAN,IAAoB,IAFxB;AAGH;;AAED,SAASC,QAAT,CAAkBP,KAAlB,EAAyB;AACrB,WAAOA,MAAMC,GAAN,IAAa,IAAb,IACHD,MAAMM,UAAN,IAAoB,KADxB;AAEH;;AAEDE,OAAOC,OAAP,GAAiB,UAASC,OAAT,EAAkB;AAC/B,QAAMC,SAAS,mCAAeD,OAAf,CAAf;AAD+B,QAExBE,MAFwB,GAEgBF,OAFhB,CAExBE,MAFwB;AAAA,QAEhBC,MAFgB,GAEgBH,OAFhB,CAEhBG,MAFgB;AAAA,QAERC,SAFQ,GAEgBJ,OAFhB,CAERI,SAFQ;AAAA,QAEGC,SAFH,GAEgBL,OAFhB,CAEGK,SAFH;;AAG/B,+BACKH,OAAOI,GADZ,YACiBC,IADjB,EACsB;AACd,YAAIN,OAAOO,WAAP,CAAmBD,IAAnB,EAAyB,CAACL,OAAOO,IAAR,EAAcP,OAAOQ,KAArB,EAA4BR,OAAOS,UAAnC,EAA+CT,OAAOU,QAAtD,CAAzB,CAAJ,EAA+F;AAC3F;AACH;AACD,YAAMC,OAAOT,UAAUG,IAAV,CAAb;AACA,eAAO,yBAAUM,IAAV,EAAgBC,IAAhB,CAAqB,kBAAU;AAClCC,mBAAOC,OAAP,CAAe,UAAC1B,KAAD,EAAW;AACtB,oBAAIO,SAASP,KAAT,CAAJ,EAAqB;AACjBa,2BAAOI,IAAP,EAAa,IAAIF,SAAJ,CAAc,gBAAd,EAAgC;AACzCY,+BAAQ3B,MAAM4B;AAD2B,qBAAhC,CAAb;AAGH;AACJ,aAND;AAOA;AACA,gBAAIH,OAAOI,MAAP,IAAiB,CAArB,EAAwB;AACpB;AACH;AACDJ,mBAAOK,MAAP,CAAc,UAACC,IAAD,EAAOC,OAAP,EAAmB;AAC7B,oBAAIjC,aAAagC,IAAb,KAAsB1B,SAAS2B,OAAT,CAA1B,EAA6C;AACzCnB,2BAAOI,IAAP,EAAa,IAAIF,SAAJ,CAAc,gBAAd,EAAgC;AACzCY,+BAAQK,QAAQJ,aAAR,GAAwB;AADS,qBAAhC,CAAb;AAGH;AACD,uBAAOI,OAAP;AACH,aAPD;AAQH,SApBM,CAAP;AAqBH,KA3BL;AA6BH,CAhCD","file":"no-dropping-the-ra.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\nimport {RuleHelper} from \"textlint-rule-helper\";\nimport kuromojin from \"kuromojin\";\n\nfunction isTargetVerb(token) {\n    return token.pos == '動詞' &&\n        token.pos_detail_1 == '自立' &&\n        token.conjugated_type == '一段' &&\n        token.conjugated_form == '未然形';\n}\n\nfunction isRaWord(token) {\n    return token.pos == '動詞' &&\n        token.pos_detail_1 == '接尾' &&\n        token.basic_form == 'れる'\n}\n\nfunction isKoreru(token) {\n    return token.pos == '動詞' &&\n        token.basic_form == '来れる'\n}\n\nmodule.exports = function(context) {\n    const helper = new RuleHelper(context);\n    const {Syntax, report, getSource, RuleError} = context;\n    return {\n        [Syntax.Str](node){\n            if (helper.isChildNode(node, [Syntax.Link, Syntax.Image, Syntax.BlockQuote, Syntax.Emphasis])) {\n                return;\n            }\n            const text = getSource(node);\n            return kuromojin(text).then(tokens => {\n                tokens.forEach((token) => {\n                    if (isKoreru(token)) {\n                        report(node, new RuleError(\"ら抜き言葉を使用しています。\", {\n                            index: (token.word_position)\n                        }));\n                    }\n                });\n                // tokenのペアがない場合は無視する\n                if (tokens.length <= 1) {\n                    return;\n                }\n                tokens.reduce((prev, current) => {\n                    if (isTargetVerb(prev) && isRaWord(current)) {\n                        report(node, new RuleError(\"ら抜き言葉を使用しています。\", {\n                            index: (current.word_position - 1)\n                        }));\n                    }\n                    return current;\n                });\n            });\n        }\n    }\n};\n"]}