{"version":3,"file":"engine.js","sourceRoot":"","sources":["engine.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\n\nimport * as r from \"./utils/regexp\";\n\nimport * as raw from \"./raw\";\nimport Target from \"./target\";\nimport Rule from \"./rule\";\nimport * as changeSet from \"./changeset\";\n\nexport default class Engine {\n    version: number;\n    targets: Target[];\n    rules: Rule[];\n\n    constructor(src: raw.Config) {\n        if (!src) {\n            throw new Error(\"src is requried\");\n        }\n        this.version = +src.version || 1;\n        this.targets = (src.targets || []).map(target => new Target(target));\n        this.rules = (src.rules || []).map(rule => new Rule(rule));\n    }\n\n    merge(other: Engine) {\n        if (!other) {\n            throw new Error(\"other is required\");\n        }\n        if (this.version !== other.version) {\n            throw new Error(\"version mismatch!\");\n        }\n        other.targets.forEach(otherTarget => {\n            let exists = this.targets.filter(target => r.equals(target.file, otherTarget.file)).length !== 0;\n            if (!exists) {\n                this.targets.push(otherTarget);\n            }\n        });\n        // NOTE https://github.com/vvakame/prh/issues/18#issuecomment-222524140\n        let reqRules = other.rules.filter(otherRule => {\n            return this.rules.filter(rule => rule.expected === otherRule.expected).length === 0;\n        });\n        this.rules = this.rules.concat(reqRules);\n    }\n\n    makeChangeSet(filePath: string, contentArg?: string): changeSet.ChangeSet {\n        const content: string = contentArg != null ? contentArg : fs.readFileSync(filePath, { encoding: \"utf8\" });\n        let changeSets = new changeSet.ChangeSet();\n        this.rules.forEach(rule => {\n            let set = rule.applyRule(content);\n            changeSets = changeSets.concat(set);\n        });\n\n        let includes = new changeSet.ChangeSet();\n        let excludes = new changeSet.ChangeSet();\n        let includesExists = false;\n        let excludesExists = false;\n        this.targets.forEach(target => {\n            target.reset();\n            if (!target.file.test(filePath)) {\n                return;\n            }\n            if (target.includes.length !== 0) {\n                // .ts の // の後や /* */ の内部だけ対象にしたい場合のための機能\n                includesExists = true;\n                target.includes.forEach(include => {\n                    includes = includes.concat(changeSet.makeChangeSet(content, include.pattern, null));\n                });\n            }\n            if (target.excludes.length !== 0) {\n                // .re の #@ の後を対象にしたくない場合のための機能\n                excludesExists = true;\n                target.excludes.forEach(exclude => {\n                    excludes = excludes.concat(changeSet.makeChangeSet(content, exclude.pattern, null));\n                });\n            }\n        });\n\n        if (includesExists) {\n            changeSets = changeSets.intersect(includes);\n        }\n        if (excludesExists) {\n            changeSets = changeSets.subtract(excludes);\n        }\n\n        return changeSets;\n    }\n\n    replaceByRule(filePath: string, content?: string) {\n        if (content == null) {\n            content = fs.readFileSync(filePath, { encoding: \"utf8\" });\n        }\n        let changeSets = this.makeChangeSet(filePath, content);\n        return changeSets.applyChangeSets(content);\n    }\n}\n"]}