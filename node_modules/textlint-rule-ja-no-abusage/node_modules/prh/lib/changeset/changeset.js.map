{"version":3,"file":"changeset.js","sourceRoot":"","sources":["changeset.ts"],"names":[],"mappings":"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","sourcesContent":["import Diff from \"./diff\";\n\nexport default class ChangeSet {\n    constructor(public diffs: Diff[] = []) {\n        this._prepare();\n    }\n\n    /* @internal */\n    _prepare() {\n        this.diffs = this.diffs.sort((a, b) => a.index - b.index);\n    }\n\n    concat(other: ChangeSet): ChangeSet {\n        this._prepare();\n        other._prepare();\n\n        this.diffs = this.diffs.concat(other.diffs);\n        return this;\n    }\n\n    applyChangeSets(str: string): string {\n        this._prepare();\n\n        let delta = 0;\n        this.diffs.forEach(data => {\n            let result = data.expected.replace(/\\$([0-9]{1,2})/g, (match: string, g1: string) => {\n                let index = parseInt(g1, 10);\n                if (index === 0 || (data.matches.length - 1) < index) {\n                    return match;\n                }\n                return data.matches[index] || \"\";\n            });\n            str = str.slice(0, data.index + delta) + result + str.slice(data.index + delta + data.matches[0].length);\n            delta += result.length - data.matches[0].length;\n        });\n\n        return str;\n    }\n\n    subtract(subtrahend: ChangeSet): ChangeSet {\n        this._prepare();\n        subtrahend._prepare();\n\n        let result: ChangeSet = new ChangeSet(this.diffs.map(v => v));\n        let m = 0;\n        let s = 0;\n\n        while (true) {\n            let minuendDiff = result.diffs[m];\n            let subtrahendDiff = subtrahend.diffs[s];\n\n            if (!minuendDiff || !subtrahendDiff) {\n                break;\n            }\n            if (!minuendDiff.isEncloser(subtrahendDiff) && minuendDiff.isCollide(subtrahendDiff)) {\n                result.diffs.splice(m, 1);\n                continue;\n            }\n            if (minuendDiff.isBefore(subtrahendDiff)) {\n                m++;\n            } else {\n                s++;\n            }\n        }\n\n        return result;\n    }\n\n    intersect(audit: ChangeSet): ChangeSet {\n        this._prepare();\n        audit._prepare();\n\n        let result: ChangeSet = new ChangeSet();\n        let a = 0;\n        let b = 0;\n\n        while (true) {\n            let baseDiff = this.diffs[a];\n            let auditDiff = audit.diffs[b];\n            if (!baseDiff || !auditDiff) {\n                break;\n            }\n            if (baseDiff.isCollide(auditDiff) && result.diffs.indexOf(baseDiff) === -1) {\n                result.diffs.push(baseDiff);\n            }\n            if (baseDiff.isBefore(auditDiff)) {\n                a++;\n            } else {\n                b++;\n            }\n        }\n\n        return result;\n    }\n}\n"]}