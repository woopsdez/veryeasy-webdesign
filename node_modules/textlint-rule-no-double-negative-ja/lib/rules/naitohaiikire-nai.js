// LICENSE : MIT
"use strict";
/*
    (f) ないとはいいきれない
*/

Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (context) {
    var RuleError = context.RuleError;

    var matchPatternないといいきれない = (0, _matchTokenStream2.default)([{
        "basic_form": ["ない", "無い"]
    }, {
        "surface_form": "と",
        "pos": "助詞"
    }, {
        "reading": "イイ"
    }, {
        "reading": "キレ",
        "pos": "動詞"
    }, {
        "basic_form": ["ない", "無い"]
    }]);
    var matchPatternないとはいいきれない = (0, _matchTokenStream2.default)([{
        "basic_form": ["ない", "無い"]
    }, {
        "surface_form": "と",
        "pos": "助詞"
    }, {
        "surface_form": "は",
        "pos": "助詞"
    }, {
        "reading": "イイ"
    }, {
        "reading": "キレ",
        "pos": "動詞"
    }, {
        "basic_form": ["ない", "無い"]
    }]);
    return function (token) {
        if (matchPatternないといいきれない(token)) {
            return new RuleError("二重否定: 〜ないといいきれない", {
                index: token.word_position - 1
            });
        }
        if (matchPatternないとはいいきれない(token)) {
            return new RuleError("二重否定: 〜ないとはいいきれない", {
                index: token.word_position - 1
            });
        }
    };
};

var _matchTokenStream = require("./../matchTokenStream");

var _matchTokenStream2 = _interopRequireDefault(_matchTokenStream);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = exports['default'];
//# sourceMappingURL=naitohaiikire-nai.js.map