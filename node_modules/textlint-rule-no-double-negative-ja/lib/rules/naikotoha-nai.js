// LICENSE : MIT
"use strict";
/*
    (d)「~ないことは / もない」
    ~ない(否定助動詞 / 否定形容詞の連体形) + 形式名詞「こと」+ とりたて助詞「は / も」+ 形容詞「ない」
 */

Object.defineProperty(exports, "__esModule", {
    value: true
});

exports.default = function (context) {
    var RuleError = context.RuleError;

    var matchPatternないことはない = (0, _matchTokenStream2.default)([{
        "basic_form": ["ない", "無い"]
    }, {
        "reading": "コト", // 漢字に対応するため
        "pos": "名詞"
    }, {
        "surface_form": "は",
        "pos": "助詞"
    }, {
        "basic_form": ["ない", "無い"]
        //"pos": ["形容詞", "助動詞"]
    }]);
    var matchPatternないこともない = (0, _matchTokenStream2.default)([{
        "basic_form": ["ない", "無い"]
    }, {
        "reading": "コト", // 漢字に対応するため
        "pos": "名詞"
    }, {
        "surface_form": "も",
        "pos": "助詞"
    }, {
        "basic_form": ["ない", "無い"],
        "pos": "形容詞"
    }]);
    return function (token) {
        if (matchPatternないことはない(token)) {
            return new RuleError("二重否定: 〜ないことはない", {
                index: token.word_position - 1
            });
        }
        if (matchPatternないこともない(token)) {
            return new RuleError("二重否定: 〜ないこともない", {
                index: token.word_position - 1
            });
        }
    };
};

var _matchTokenStream = require("./../matchTokenStream");

var _matchTokenStream2 = _interopRequireDefault(_matchTokenStream);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

module.exports = exports['default'];
//# sourceMappingURL=naikotoha-nai.js.map