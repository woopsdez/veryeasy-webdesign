{"version":3,"sources":["../../src/rules/nakuha-nai.js"],"names":["context","RuleError","matchPatternなくもない","matchPatternなくはない","token","index","word_position"],"mappings":"AAAA;AACA;AACA;;;;;;;;;;;kBAOe,UAAUA,OAAV,EAAmB;AAAA,QACvBC,SADuB,GACVD,OADU,CACvBC,SADuB;;AAE9B,QAAMC,oBAAoB,gCAAiB,CACvC;AACI,sBAAc,CAAC,IAAD,EAAO,IAAP;AADlB,KADuC,EAIvC;AACI,wBAAgB,GADpB;AAEI,eAAO;AAFX,KAJuC,EAQvC;AACI,sBAAc,CAAC,IAAD,EAAO,IAAP,CADlB;AAEI,eAAO;AAFX,KARuC,CAAjB,CAA1B;AAaA,QAAMC,oBAAoB,gCAAiB,CACvC;AACI,sBAAc,CAAC,IAAD,EAAO,IAAP;AADlB,KADuC,EAIvC;AACI,wBAAgB,GADpB;AAEI,eAAO;AAFX,KAJuC,EAQvC;AACI,sBAAc,CAAC,IAAD,EAAO,IAAP,CADlB;AAEI,eAAO;AAFX,KARuC,CAAjB,CAA1B;AAaA,WAAO,UAACC,KAAD,EAAW;AACd,YAAIF,kBAAkBE,KAAlB,CAAJ,EAA8B;AAC1B,mBAAO,IAAIH,SAAJ,CAAc,cAAd,EAA8B;AACjCI,uBAAOD,MAAME,aAAN,GAAsB;AADI,aAA9B,CAAP;AAGH;AACD,YAAIH,kBAAkBC,KAAlB,CAAJ,EAA8B;AAC1B,mBAAO,IAAIH,SAAJ,CAAc,cAAd,EAA8B;AACjCI,uBAAOD,MAAME,aAAN,GAAsB;AADI,aAA9B,CAAP;AAGH;AACJ,KAXD;AAYH,C;;AAzCD","file":"nakuha-nai.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n/*\n    (a)「~なくは / もない」\n    「~なく」(否定助動詞 / 否定形容詞)「ない」の連用形)+とりたて助詞「は / も」+ 補助形容詞「ない」\n    は:  だが、それが事件の発端だったといえなくもない。\n    も: いや、本音を言えば、それよりこちらの方が大事ではないかという思いもなくはなかった。\n */\nimport matchTokenStream from \"./../matchTokenStream\";\nexport default function (context) {\n    const {RuleError} = context;\n    const matchPatternなくもない = matchTokenStream([\n        {\n            \"basic_form\": [\"ない\", \"無い\"]\n        },\n        {\n            \"surface_form\": \"も\",\n            \"pos\": \"助詞\"\n        },\n        {\n            \"basic_form\": [\"ない\", \"無い\"],\n            \"pos\": \"形容詞\"\n        }\n    ]);\n    const matchPatternなくはない = matchTokenStream([\n        {\n            \"basic_form\": [\"ない\", \"無い\"]\n        },\n        {\n            \"surface_form\": \"は\",\n            \"pos\": \"助詞\"\n        },\n        {\n            \"basic_form\": [\"ない\", \"無い\"],\n            \"pos\": \"形容詞\"\n        }\n    ]);\n    return (token) => {\n        if (matchPatternなくもない(token)) {\n            return new RuleError(\"二重否定: 〜なくもない\", {\n                index: token.word_position - 1\n            });\n        }\n        if (matchPatternなくはない(token)) {\n            return new RuleError(\"二重否定: 〜なくはない\", {\n                index: token.word_position - 1\n            });\n        }\n    };\n}"]}