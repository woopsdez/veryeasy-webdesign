{"version":3,"sources":["../src/no-doubled-negative-ja.js"],"names":["context","Syntax","getSource","report","RuleError","ruleなくもない","ruleないでもない","ruleないものではない","ruleないことはない","ruleないわけではない","ruleないとはいいきれない","ruleないとはかぎらない","Str","node","text","results","pushError","error","push","then","tokenizer","tokenizeForSentence","tokens","forEach","token"],"mappings":"AAAA;AACA;AACA;;;;;;kBASe,UAAUA,OAAV,EAAmB;AAAA,QACvBC,MADuB,GACeD,OADf,CACvBC,MADuB;AAAA,QAChBC,SADgB,GACeF,OADf,CAChBE,SADgB;AAAA,QACLC,MADK,GACeH,OADf,CACLG,MADK;AAAA,QACEC,SADF,GACeJ,OADf,CACEI,SADF;AAE9B;;AACA,QAAMC,YAAY,yBAAML,OAAN,CAAlB;AACA,QAAMM,aAAa,0BAAON,OAAP,CAAnB;AACA,QAAMO,eAAe,8BAASP,OAAT,CAArB;AACA,QAAMQ,cAAc,4BAAQR,OAAR,CAApB;AACA,QAAMS,eAAe,8BAAST,OAAT,CAArB;AACA,QAAMU,iBAAiB,gCAAWV,OAAX,CAAvB;AACA,QAAMW,gBAAgB,gCAAUX,OAAV,CAAtB;AACA,+BACKC,OAAOW,GADZ,YACiBC,IADjB,EACsB;AACd,YAAMC,OAAOZ,UAAUW,IAAV,CAAb;AACA,YAAME,UAAU,EAAhB;AACA,YAAMC,YAAY,SAAZA,SAAY,CAACC,KAAD,EAAW;AACzB,gBAAIA,KAAJ,EAAW;AACPF,wBAAQG,IAAR,CAAaD,KAAb;AACH;AACJ,SAJD;AAKA,eAAO,+BAAeE,IAAf,CAAoB,qBAAa;AACpC,mBAAOC,UAAUC,mBAAV,CAA8BP,IAA9B,CAAP;AACH,SAFM,EAEJK,IAFI,CAEC,kBAAU;AACdG,mBAAOC,OAAP,CAAe,iBAAS;AACpBP,0BAAUX,UAAUmB,KAAV,CAAV;AACAR,0BAAUV,WAAWkB,KAAX,CAAV;AACAR,0BAAUT,aAAaiB,KAAb,CAAV;AACAR,0BAAUR,YAAYgB,KAAZ,CAAV;AACAR,0BAAUP,aAAae,KAAb,CAAV;AACAR,0BAAUN,eAAec,KAAf,CAAV;AACAR,0BAAUL,cAAca,KAAd,CAAV;AACH,aARD;AASH,SAZM,EAYJL,IAZI,CAYC,YAAK;AACTJ,oBAAQQ,OAAR,CAAgB,iBAAS;AACrBpB,uBAAOU,IAAP,EAAaI,KAAb;AACH,aAFD;AAGH,SAhBM,CAAP;AAiBH,KA1BL;AA6BH,C;;AA/CD;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA","file":"no-doubled-negative-ja.js","sourcesContent":["// LICENSE : MIT\n\"use strict\";\n// tokens -> event emitter -> return check\nimport {getTokenizer} from \"kuromojin\";\nimport なくはない from \"./rules/nakuha-nai\";\nimport ないでもない from \"./rules/naidemo-nai\";\nimport ないものではない from \"./rules/naimonodeha-nai\";\nimport ないことはない from \"./rules/naikotoha-nai\";\nimport ないわけではない from \"./rules/naiwakedeha-nai\";\nimport ないとはいいきれない from \"./rules/naitohaiikire-nai\";\nimport ないとはかぎらない from \"./rules/naitohakagira-nai\";\nexport default function (context) {\n    const {Syntax,getSource, report,RuleError} = context;\n    // initialize each rules\n    const ruleなくもない = なくはない(context);\n    const ruleないでもない = ないでもない(context);\n    const ruleないものではない = ないものではない(context);\n    const ruleないことはない = ないことはない(context);\n    const ruleないわけではない = ないわけではない(context);\n    const ruleないとはいいきれない = ないとはいいきれない(context);\n    const ruleないとはかぎらない = ないとはかぎらない(context);\n    return {\n        [Syntax.Str](node){\n            const text = getSource(node);\n            const results = [];\n            const pushError = (error) => {\n                if (error) {\n                    results.push(error);\n                }\n            };\n            return getTokenizer().then(tokenizer => {\n                return tokenizer.tokenizeForSentence(text);\n            }).then(tokens => {\n                tokens.forEach(token => {\n                    pushError(ruleなくもない(token));\n                    pushError(ruleないでもない(token));\n                    pushError(ruleないものではない(token));\n                    pushError(ruleないことはない(token));\n                    pushError(ruleないわけではない(token));\n                    pushError(ruleないとはいいきれない(token));\n                    pushError(ruleないとはかぎらない(token));\n                });\n            }).then(()=> {\n                results.forEach(error => {\n                    report(node, error);\n                })\n            })\n        }\n    }\n\n}"]}