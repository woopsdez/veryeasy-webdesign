// LICENSE : MIT
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = expectTokenStream;
function matchToken(token, expectShape) {
    return Object.keys(expectShape).every(function (key) {
        var actualValue = token[key];
        // 値は複数の場合もある
        var expectedValues = Array.isArray(expectShape[key]) ? expectShape[key] : [expectShape[key]];
        return expectedValues.some(function (expectedValue) {
            return actualValue === expectedValue;
        });
    });
}
function expectTokenStream(tokenStream) {
    var currentTokenPosition = 0;
    var tokenCount = tokenStream.length;
    return function (token) {
        var expectedToken = tokenStream[currentTokenPosition];
        if (matchToken(token, expectedToken)) {
            currentTokenPosition += 1;
        } else {
            // restart
            currentTokenPosition = 0;
        }
        // match
        if (currentTokenPosition === tokenCount) {
            // match -> reset
            currentTokenPosition = 0;
            return true;
        }
        return false;
    };
}
module.exports = exports['default'];
//# sourceMappingURL=matchTokenStream.js.map